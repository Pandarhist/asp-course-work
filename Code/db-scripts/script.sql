/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.2 		*/
/*  Created On : 19-дек-2022 1:05:50 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */


CREATE DATABASE MusicShopASP

USE MusicShopASP

GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Orders_Customers]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Orders] DROP CONSTRAINT [FK_Orders_Customers]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Orders_OrderStatuses]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Orders] DROP CONSTRAINT [FK_Orders_OrderStatuses]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Orders_PaymentTypes]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Orders] DROP CONSTRAINT [FK_Orders_PaymentTypes]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Orders_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Orders] DROP CONSTRAINT [FK_Orders_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Products_ProductTypes]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Products] DROP CONSTRAINT [FK_Products_ProductTypes]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ShoppingCart_Orders]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ShoppingCarts] DROP CONSTRAINT [FK_ShoppingCart_Orders]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ShoppingCart_Products]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ShoppingCarts] DROP CONSTRAINT [FK_ShoppingCart_Products]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Staff_Users]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Staff] DROP CONSTRAINT [FK_Staff_Users]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Customers]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Customers]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Orders]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Orders]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[OrderStatuses]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [OrderStatuses]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[PaymentTypes]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [PaymentTypes]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Products]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Products]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ProductTypes]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ProductTypes]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ShoppingCarts]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ShoppingCarts]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Staff]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Users]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Users]
GO

/* Create Tables */

CREATE TABLE [Customers]
(
	[c_id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,	-- Id покупателя
	[c_surname] nvarchar(50) NOT NULL,	-- Фамилия покупателя
	[c_name] nvarchar(50) NOT NULL,	-- Имя покупателя
	[c_patronymic] nvarchar(50) NOT NULL,	-- Отчество покупателя
	[c_phone] varchar(13) NOT NULL
)
GO

CREATE TABLE [Orders]
(
	[o_id] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,	-- Id заказа
	[o_customer] int NULL,
	[o_employee] int NULL,	-- Сотрудник, принявший заказ
	[o_status] int NOT NULL DEFAULT 1,	-- Статус заказа
	[o_payment_type] int NOT NULL,
	[o_total_cost] money NOT NULL DEFAULT 0,
	[o_order_date] datetime NOT NULL,
	[o_payment_date] datetime NULL
)
GO

CREATE TABLE [OrderStatuses]
(
	[os_id] int NOT NULL IDENTITY (1, 1),	-- Id статуса заказа
	[os_name] nvarchar(50) NOT NULL
)
GO

CREATE TABLE [PaymentTypes]
(
	[pt_id] int NOT NULL IDENTITY (1, 1),
	[pt_name] nvarchar(75) NOT NULL
)
GO

CREATE TABLE [Products]
(
	[p_number] int NOT NULL IDENTITY (1, 1),	-- Артикул товара
	[p_type] int NOT NULL,	-- Тип товара
	[p_name] nvarchar(200) NOT NULL,	-- Наименование товара
	[p_producer] nvarchar(200) NOT NULL,	-- Производитель
	[p_price] money NOT NULL DEFAULT 0,	-- Цена товара
	[p_description] nvarchar(max) NULL,	-- Описание
	[p_amount] int NOT NULL DEFAULT 0,	-- Количество на складе
	[p_is_deleted] bit NOT NULL DEFAULT 0	-- Удалён ли товар?  0 - нет, 1 -да
)
GO

CREATE TABLE [ProductTypes]
(
	[pt_id] int NOT NULL IDENTITY (1, 1),
	[pt_name] nvarchar(100) NOT NULL
)
GO

CREATE TABLE [ShoppingCarts]
(
	[sc_order] int NOT NULL,
	[sc_product] int NOT NULL,
	[sc_count] int NOT NULL DEFAULT 1
)
GO

CREATE TABLE [Staff]
(
	[s_personnel_number] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,	-- Табельный номер
	[s_user] int NULL,	-- Id пользователя в системе
	[s_surname] nvarchar(50) NOT NULL,	-- Фамилия
	[s_name] nvarchar(50) NOT NULL,
	[s_patronymic] nvarchar(50) NOT NULL,	-- Отчество
	[s_post] nvarchar(50) NOT NULL,	-- Должность
	[s_is_fired] bit NOT NULL DEFAULT 0	-- Уволен ли сотрудник? 0 - нет, 1 - да
)
GO

CREATE TABLE [Users]
(
	[u_id] int NOT NULL IDENTITY (1, 1),
	[u_login] varchar(30) NOT NULL,	-- Логин
	[u_password] varchar(18) NOT NULL	-- Пароль
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Customers] 
 ADD CONSTRAINT [PK_Customers]
	PRIMARY KEY CLUSTERED ([c_id] ASC)
GO

ALTER TABLE [Orders] 
 ADD CONSTRAINT [PK_Orders]
	PRIMARY KEY CLUSTERED ([o_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Orders_Customers] 
 ON [Orders] ([o_customer] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Orders_OrderStatuses] 
 ON [Orders] ([o_status] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Orders_PaymentTypes] 
 ON [Orders] ([o_payment_type] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Orders_Staff] 
 ON [Orders] ([o_employee] ASC)
GO

ALTER TABLE [OrderStatuses] 
 ADD CONSTRAINT [PK_OrderStatuses]
	PRIMARY KEY CLUSTERED ([os_id] ASC)
GO

ALTER TABLE [OrderStatuses] 
 ADD CONSTRAINT [UQ_OrderStatus_Name] UNIQUE NONCLUSTERED ([os_name] ASC)
GO

ALTER TABLE [PaymentTypes] 
 ADD CONSTRAINT [PK_PaymentTypes]
	PRIMARY KEY CLUSTERED ([pt_id] ASC)
GO

ALTER TABLE [PaymentTypes] 
 ADD CONSTRAINT [UQ_PaymentType_Name] UNIQUE NONCLUSTERED ([pt_name] ASC)
GO

ALTER TABLE [Products] 
 ADD CONSTRAINT [PK_Product]
	PRIMARY KEY CLUSTERED ([p_number] ASC)
GO

ALTER TABLE [Products] 
 ADD CONSTRAINT [CK_Product_Amount] CHECK ([p_amount]>=0)
GO

CREATE NONCLUSTERED INDEX [IXFK_Products_ProductTypes] 
 ON [Products] ([p_type] ASC)
GO

CREATE UNIQUE NONCLUSTERED INDEX [UQ_Product_Name] 
 ON [Products] ([p_name] ASC)
GO

ALTER TABLE [ProductTypes] 
 ADD CONSTRAINT [PK_ProductType]
	PRIMARY KEY CLUSTERED ([pt_id] ASC)
GO

ALTER TABLE [ProductTypes] 
 ADD CONSTRAINT [UQ_ProductType_Name] UNIQUE NONCLUSTERED ([pt_name] ASC)
GO

ALTER TABLE [ShoppingCarts] 
 ADD CONSTRAINT [PK_ShoppingCart]
	PRIMARY KEY CLUSTERED ([sc_order] ASC,[sc_product] ASC)
GO

ALTER TABLE [ShoppingCarts] 
 ADD CONSTRAINT [CK_Product_Count] CHECK ([sc_count]>=1)
GO

CREATE NONCLUSTERED INDEX [IXFK_ShoppingCart_Orders] 
 ON [ShoppingCarts] ([sc_order] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ShoppingCart_Products] 
 ON [ShoppingCarts] ([sc_product] ASC)
GO

ALTER TABLE [Staff] 
 ADD CONSTRAINT [PK_Staff]
	PRIMARY KEY CLUSTERED ([s_personnel_number] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Staff_Users] 
 ON [Staff] ([s_user] ASC)
GO

ALTER TABLE [Users] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([u_id] ASC)
GO

ALTER TABLE [Users] 
 ADD CONSTRAINT [UQ_User_Login] UNIQUE NONCLUSTERED ([u_login] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Orders] ADD CONSTRAINT [FK_Orders_Customers]
	FOREIGN KEY ([o_customer]) REFERENCES [Customers] ([c_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Orders] ADD CONSTRAINT [FK_Orders_OrderStatuses]
	FOREIGN KEY ([o_status]) REFERENCES [OrderStatuses] ([os_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Orders] ADD CONSTRAINT [FK_Orders_PaymentTypes]
	FOREIGN KEY ([o_payment_type]) REFERENCES [PaymentTypes] ([pt_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Orders] ADD CONSTRAINT [FK_Orders_Staff]
	FOREIGN KEY ([o_employee]) REFERENCES [Staff] ([s_personnel_number]) ON DELETE Set Null ON UPDATE No Action
GO

ALTER TABLE [Products] ADD CONSTRAINT [FK_Products_ProductTypes]
	FOREIGN KEY ([p_type]) REFERENCES [ProductTypes] ([pt_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ShoppingCarts] ADD CONSTRAINT [FK_ShoppingCart_Orders]
	FOREIGN KEY ([sc_order]) REFERENCES [Orders] ([o_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ShoppingCarts] ADD CONSTRAINT [FK_ShoppingCart_Products]
	FOREIGN KEY ([sc_product]) REFERENCES [Products] ([p_number]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Staff] ADD CONSTRAINT [FK_Staff_Users]
	FOREIGN KEY ([s_user]) REFERENCES [Users] ([u_id]) ON DELETE Set Null ON UPDATE No Action
GO

/* Create Table Comments */

EXEC sp_addextendedproperty 'MS_Description', 'Id покупателя', 'Schema', [dbo], 'table', [Customers], 'column', [c_id]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Фамилия покупателя', 'Schema', [dbo], 'table', [Customers], 'column', [c_surname]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Имя покупателя', 'Schema', [dbo], 'table', [Customers], 'column', [c_name]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Отчество покупателя', 'Schema', [dbo], 'table', [Customers], 'column', [c_patronymic]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Id заказа', 'Schema', [dbo], 'table', [Orders], 'column', [o_id]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Сотрудник, принявший заказ', 'Schema', [dbo], 'table', [Orders], 'column', [o_employee]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Статус заказа', 'Schema', [dbo], 'table', [Orders], 'column', [o_status]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Id статуса заказа', 'Schema', [dbo], 'table', [OrderStatuses], 'column', [os_id]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Артикул товара', 'Schema', [dbo], 'table', [Products], 'column', [p_number]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Тип товара', 'Schema', [dbo], 'table', [Products], 'column', [p_type]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Наименование товара', 'Schema', [dbo], 'table', [Products], 'column', [p_name]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Производитель', 'Schema', [dbo], 'table', [Products], 'column', [p_producer]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Цена товара', 'Schema', [dbo], 'table', [Products], 'column', [p_price]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Описание', 'Schema', [dbo], 'table', [Products], 'column', [p_description]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Количество на складе', 'Schema', [dbo], 'table', [Products], 'column', [p_amount]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Удалён ли товар?

0 - нет, 1 -да', 'Schema', [dbo], 'table', [Products], 'column', [p_is_deleted]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Табельный номер', 'Schema', [dbo], 'table', [Staff], 'column', [s_personnel_number]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Id пользователя в системе', 'Schema', [dbo], 'table', [Staff], 'column', [s_user]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Фамилия', 'Schema', [dbo], 'table', [Staff], 'column', [s_surname]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Отчество', 'Schema', [dbo], 'table', [Staff], 'column', [s_patronymic]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Должность', 'Schema', [dbo], 'table', [Staff], 'column', [s_post]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Уволен ли сотрудник?
0 - нет, 1 - да', 'Schema', [dbo], 'table', [Staff], 'column', [s_is_fired]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Логин', 'Schema', [dbo], 'table', [Users], 'column', [u_login]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Пароль', 'Schema', [dbo], 'table', [Users], 'column', [u_password]
GO
